{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nfunction UserFormComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserFormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Valid email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserFormComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, role_r1));\n  }\n}\nfunction UserFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Role is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserFormComponent_div_22_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserFormComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 18);\n    i0.ɵɵtext(2, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 19);\n    i0.ɵɵtemplate(4, UserFormComponent_div_22_div_4_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r1.userForm.get(\"password\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r1.userForm.get(\"password\")) == null ? null : tmp_1_0.touched));\n  }\n}\nexport let UserFormComponent = /*#__PURE__*/(() => {\n  class UserFormComponent {\n    constructor(fb, router, route) {\n      this.fb = fb;\n      this.router = router;\n      this.route = route;\n      this.isEditMode = false;\n      this.userId = null;\n      this.roles = ['admin', 'doctor', 'patient'];\n      this.userForm = this.fb.group({\n        name: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        role: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        const id = params.get('id');\n        if (id) {\n          this.isEditMode = true;\n          this.userId = +id;\n          // Load user data from API or service here\n          // For now, populate with dummy data\n          this.userForm.patchValue({\n            name: 'Sample User',\n            email: 'sample@example.com',\n            role: 'doctor',\n            password: ''\n          });\n          this.userForm.get('password')?.clearValidators();\n          this.userForm.get('password')?.updateValueAndValidity();\n        }\n      });\n    }\n    onSubmit() {\n      if (this.userForm.invalid) {\n        return;\n      }\n      const userData = this.userForm.value;\n      if (this.isEditMode) {\n        // Update user API call\n        alert('User updated: ' + JSON.stringify(userData));\n      } else {\n        // Create user API call\n        alert('User created: ' + JSON.stringify(userData));\n      }\n      this.router.navigate(['/users']);\n    }\n    onCancel() {\n      this.router.navigate(['/users']);\n    }\n    static {\n      this.ɵfac = function UserFormComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || UserFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserFormComponent,\n        selectors: [[\"app-user-form\"]],\n        decls: 28,\n        vars: 9,\n        consts: [[1, \"max-w-md\", \"mx-auto\", \"bg-white\", \"p-6\", \"rounded-lg\", \"shadow-md\"], [1, \"text-2xl\", \"font-semibold\", \"text-gray-700\", \"mb-4\"], [1, \"space-y-4\", 3, \"ngSubmit\", \"formGroup\"], [\"for\", \"name\", 1, \"block\", \"text-gray-700\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Enter full name\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500\"], [\"class\", \"text-red-600 text-sm mt-1\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"block\", \"text-gray-700\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter email address\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500\"], [\"for\", \"role\", 1, \"block\", \"text-gray-700\"], [\"id\", \"role\", \"formControlName\", \"role\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"flex\", \"space-x-4\"], [\"type\", \"submit\", 1, \"bg-indigo-600\", \"text-white\", \"px-4\", \"py-2\", \"rounded\", \"hover:bg-indigo-700\", 3, \"disabled\"], [\"type\", \"button\", 1, \"bg-gray-300\", \"text-gray-700\", \"px-4\", \"py-2\", \"rounded\", \"hover:bg-gray-400\", 3, \"click\"], [1, \"text-red-600\", \"text-sm\", \"mt-1\"], [3, \"value\"], [\"for\", \"password\", 1, \"block\", \"text-gray-700\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter password\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500\"]],\n        template: function UserFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 2);\n            i0.ɵɵlistener(\"ngSubmit\", function UserFormComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"div\")(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 4);\n            i0.ɵɵtemplate(8, UserFormComponent_div_8_Template, 2, 0, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\")(10, \"label\", 6);\n            i0.ɵɵtext(11, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 7);\n            i0.ɵɵtemplate(13, UserFormComponent_div_13_Template, 2, 0, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"div\")(15, \"label\", 8);\n            i0.ɵɵtext(16, \"Role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"select\", 9)(18, \"option\", 10);\n            i0.ɵɵtext(19, \"Select role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(20, UserFormComponent_option_20_Template, 3, 4, \"option\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(21, UserFormComponent_div_21_Template, 2, 0, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(22, UserFormComponent_div_22_Template, 5, 1, \"div\", 12);\n            i0.ɵɵelementStart(23, \"div\", 13)(24, \"button\", 14);\n            i0.ɵɵtext(25);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"button\", 15);\n            i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_26_listener() {\n              return ctx.onCancel();\n            });\n            i0.ɵɵtext(27, \" Cancel \");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            let tmp_2_0;\n            let tmp_3_0;\n            let tmp_5_0;\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Edit User\" : \"Create User\", \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.userForm.get(\"role\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.userForm.get(\"role\")) == null ? null : tmp_5_0.touched));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isEditMode);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" \");\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return UserFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}